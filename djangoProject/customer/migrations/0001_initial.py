# Generated by Django 2.2.7 on 2021-01-14 03:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contactnum', models.CharField(db_column='ContactNum', max_length=11)),
                ('address', models.CharField(db_column='Address', max_length=50)),
                ('ewallet', models.DecimalField(db_column='EWallet', decimal_places=2, default=0, max_digits=10)),
                ('usertype', models.CharField(db_column='UserType', max_length=7)),
                ('amountdonated', models.DecimalField(db_column='AmountDonated', decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='ProductID', primary_key=True, serialize=False)),
                ('productname', models.CharField(db_column='ProductName', max_length=20)),
                ('productprice', models.DecimalField(db_column='ProductPrice', decimal_places=2, max_digits=10)),
                ('productpic', models.ImageField(db_column='ProductPic', upload_to='images/products/%Y/%m/%D/')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('reviewid', models.CharField(db_column='ReviewID', max_length=5, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.CharField(db_column='Comment', max_length=25)),
                ('productid', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, to='customer.Product')),
                ('userid', models.ForeignKey(db_column='UserID', limit_choices_to={'usertype': 'C'}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('restaurantid', models.CharField(db_column='RestaurantID', max_length=5, primary_key=True, serialize=False)),
                ('restaurantname', models.CharField(db_column='RestaurantName', max_length=25)),
                ('description', models.CharField(db_column='Description', max_length=150)),
                ('contactnum', models.CharField(db_column='ContactNum', max_length=11)),
                ('address', models.CharField(db_column='Address', max_length=255)),
                ('image', models.ImageField(db_column='Image', upload_to='images/restaurants/%Y/%m/%D/')),
                ('ownerid', models.ForeignKey(db_column='OwnerID', limit_choices_to={'usertype': 'V'}, on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'restaurant',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='restaurantid',
            field=models.ForeignKey(db_column='RestaurantID', on_delete=django.db.models.deletion.CASCADE, to='customer.Restaurant'),
        ),
        migrations.CreateModel(
            name='Orderitem',
            fields=[
                ('orderid', models.CharField(db_column='OrderID', max_length=5, primary_key=True, serialize=False)),
                ('addresstodelivery', models.CharField(db_column='AddressToDelivery', max_length=50)),
                ('deliveryfee', models.DecimalField(db_column='DeliveryFee', decimal_places=0, max_digits=2)),
                ('status', models.CharField(db_column='Status', max_length=10)),
                ('reasonofreject', models.CharField(db_column='ReasonOfReject', max_length=20)),
                ('restaurantid', models.ForeignKey(db_column='RestaurantID', on_delete=django.db.models.deletion.CASCADE, to='customer.Restaurant')),
                ('riderid', models.ForeignKey(db_column='RiderID', limit_choices_to={'usertype': 'R'}, on_delete=django.db.models.deletion.PROTECT, related_name='delivery', to=settings.AUTH_USER_MODEL)),
                ('userid', models.ForeignKey(db_column='UserID', limit_choices_to={'usertype': 'C'}, on_delete=django.db.models.deletion.CASCADE, related_name='order', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'orderitem',
            },
        ),
        migrations.CreateModel(
            name='Orderproduct',
            fields=[
                ('orderproductid', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=2, max_digits=10)),
                ('orderid', models.ForeignKey(db_column='OrderID', on_delete=django.db.models.deletion.CASCADE, to='customer.Orderitem')),
                ('productid', models.ForeignKey(db_column='ProductID', on_delete=django.db.models.deletion.CASCADE, to='customer.Product')),
            ],
            options={
                'db_table': 'orderproduct',
                'unique_together': {('orderid', 'productid')},
            },
        ),
    ]
